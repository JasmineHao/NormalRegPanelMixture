{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "16e3345c-51a7-4fd5-902f-2a2565e59ba1",
   "metadata": {},
   "outputs": [],
   "source": [
    "from MixtureTestFunctions import *\n",
    "import time\n",
    "\n",
    "# Set print options\n",
    "# Define parameters\n",
    "\n",
    "# alpha = np.array([0.5, 0.5])  # Category probabilities (for M categories)\n",
    "alphaset = [np.array([0.5, 0.5]), np.array([0.2, 0.8])]\n",
    "rhoset = [np.array([0.5, 0.7]), np.array([0.5, 0.9])]\n",
    "# rho = np.array([0.5, 0.7])  # Mean values for each subcategory (M x K)\n",
    "mu = np.array([-1.0, 1.0])  # Mean values for each subcategory (M x K)\n",
    "sigma = np.array([0.8,1.2])  # Standard deviation for each category (length M)\n",
    "\n",
    "\n",
    "# beta = np.array([[0.0], [0.0]])  # Coefficients for q covariates (M x q)\n",
    "\n",
    "N = 200  # Number of individuals\n",
    "T = 5  # Number of time periods\n",
    "M = 2  # Number of categories\n",
    "p = 0  # Number of covariates in z\n",
    "q = 1  # Number of covariates in x\n",
    "nrep = 10\n",
    "BB = 19\n",
    "\n",
    "beta = np.zeros((M,q))\n",
    "gamma = np.zeros(p) # Coefficients for p covariates (length p)\n",
    "beta = np.array([[1.0], [-1.0]])  # Coefficients for q covariates (M x q)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20353243-b6d6-4a3e-be53-d34e86e3b192",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'rho' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[2], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m rho\n",
      "\u001b[0;31mNameError\u001b[0m: name 'rho' is not defined"
     ]
    }
   ],
   "source": [
    "rho"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "64251265-1ae4-4098-8e78-720ef8c10374",
   "metadata": {},
   "outputs": [],
   "source": [
    "alpha = alphaset[0]\n",
    "rho = rhoset[0]\n",
    "mu_0 = mu / (1 - rho)\n",
    "beta_0 = np.zeros(beta.shape)\n",
    "# beta \n",
    "sigma_0_sq = sigma**2 / (1 - rho**2)\n",
    "for mm in range(M):\n",
    "    for j in range(q):\n",
    "        beta_0[mm, j] = beta[mm, j] / (1- rho[mm])\n",
    "        sigma_0_sq[mm] += beta[mm, j]**2 / (1- rho[mm]**2)\n",
    "sigma_0 = np.sqrt(sigma_0_sq)\n",
    "gamma_0 = gamma\n",
    "\n",
    "data = generate_data_ar1(alpha, rho, mu, sigma, beta, gamma, mu_0, sigma_0, beta_0, gamma_0, N, T, M, p, q)\n",
    "\n",
    "y = data[0]\n",
    "x = data[1]\n",
    "z = data[2]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "myenv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
